version: '3.8'

services:
  certilia-server:
    build: .
    container_name: certilia-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Add your Certilia credentials here or use .env file
      - CERTILIA_CLIENT_ID=${CERTILIA_CLIENT_ID}
      - CERTILIA_CLIENT_SECRET=${CERTILIA_CLIENT_SECRET}
      - CERTILIA_REDIRECT_URI=${CERTILIA_REDIRECT_URI}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - certilia-network

  redis:
    image: redis:7-alpine
    container_name: certilia-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - certilia-network

  nginx:
    image: nginx:alpine
    container_name: certilia-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - certilia-server
    restart: unless-stopped
    networks:
      - certilia-network

volumes:
  redis-data:
    driver: local

networks:
  certilia-network:
    driver: bridge